{"version":3,"file":"static/js/411.58eb4e6a.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.styled.jsx","redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const ContactsHeader = styled.div`\n  background-color: #7ad9f7;\n  padding: 12px 80px;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  gap: 50px;\n`;\nexport const MyContacts = styled.p`\n  font-size: 20px;\n  color: #000000;\n  padding: 8px 16px;\n  border-radius: 8px;\n  background-color: #e9af3d;\n`;\n\nexport const AddButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 8px;\n  background-color: #e9af3d;\n`;\n\nexport const List = styled.ul`\n  background-color: #7ad9f7;\n  padding: 32px;\n  border-radius: 8px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 24px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  width: 360px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 16px;\n  border-radius: 8px;\n  background-color: #e9af3d;\n`;\n\nexport const ContactData = styled.p`\n  font-size: 20px;\n  color: #000000;\n  margin-bottom: 4px;\n`;\n\nexport const DeleteContactBtn = styled.button`\n  background-color: transparent;\n`;\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectFilterValue = state => state.filter.filter;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 400px;\n  background-color: #7ad9f7;\n  padding: 12px;\n  border-radius: 8px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: #000000;\n  font-size: 20px;\n  margin-bottom: 12px;\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  padding: 4px;\n  margin-top: 4px;\n  border-radius: 4px;\n  border: 2px solid transparent;\n  outline: transparent;\n\n  &: focus {\n    border-color: #e9af3d;\n  }\n\n  &: hover {\n    border-color: #e9af3d;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 8px 24px;\n  font-size: 16px;\n  color: #000000;\n  background-color: #e9af3d;\n`;\n\nexport const Group = styled.p`\n  color: #000000;\n  font-size: 18px;\n  margin-bottom: 4px;\n`;\n\nexport const RadioContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const RaioDiv = styled.div`\n  position: relative;\n  padding: 0px 0px 0px 26px;\n  margin-bottom: 20px;\n  line-height: 24px;\n\n  &:before {\n    position: absolute;\n    content: '';\n    width: 20px;\n    height: 20px;\n    left: 0;\n    top: 0;\n    background-color: #ffffff;\n    border-radius: 50%;\n  }\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 14px;\n    height: 14px;\n    left: 3px;\n    top: 3px;\n    background-color: #78a1bb;\n    border-radius: 50%;\n  }\n`;\n\nexport const RadioInput = styled.input`\n  display: none;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\nimport { selectContacts } from '../../redux/selectors';\nimport { addContactAction } from '../../redux/contacts/contactsOperations';\n\nimport {\n  Form,\n  Label,\n  Input,\n  SubmitButton,\n  // Group,\n  // RadioContainer,\n  // RaioDiv,\n  // RadioInput,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isExist = contacts.some(contact => contact.name === name);\n    if (isExist) {\n      Notiflix.Notify.warning(`${name} is already in your phonebook`);\n      return;\n    }\n    dispatch(addContactAction({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          required\n          placeholder=\"Enter name\"\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          required\n          placeholder=\"Enter number\"\n          onChange={handleChange}\n        />\n      </Label>\n\n      {/* <Group>Group</Group>\n      <RadioContainer>\n        <RaioDiv>\n          Family\n          <RadioInput type=\"radio\" name=\"group\" value=\"family\" />\n        </RaioDiv>\n\n        <RaioDiv>\n          Friends\n          <RadioInput type=\"radio\" name=\"group\" value=\"friends\" />\n        </RaioDiv>\n\n        <RaioDiv>\n          Work\n          <RadioInput type=\"radio\" name=\"group\" value=\"work\" />\n        </RaioDiv>\n\n        <RaioDiv>\n          Others\n          <RadioInput type=\"radio\" name=\"group\" value=\"others\" checked />\n        </RaioDiv>\n      </RadioContainer> */}\n\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  width: 400px;\n  background-color: #7ad9f7;\n  padding: 12px;\n  border-radius: 8px;\n`;\n\nexport const Label = styled.label`\n  color: #000000;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  padding: 4px;\n  margin-top: 4px;\n  border-radius: 4px;\n  border: 2px solid transparent;\n  outline: transparent;\n  &: focus {\n    border-color: #e9af3d;\n  }\n  &: hover {\n    border-color: #e9af3d;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilterValue } from '../../redux/selectors';\nimport { setSearchFilterAction } from '../../redux/filter/filterSlice';\nimport { FilterContainer, Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const { filter } = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const filterChange = e => {\n    dispatch(setSearchFilterAction(e.target.value));\n  };\n\n  return (\n    <FilterContainer>\n      <Label>\n        Find contact\n        <Input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Search...\"\n          value={filter}\n          onChange={filterChange}\n        />\n      </Label>\n    </FilterContainer>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport {\n  selectContacts,\n  selectFilterValue,\n  selectError,\n  selectIsLoading,\n} from '../../redux/selectors';\nimport {\n  getAllContactsAction,\n  deleteContactAction,\n} from '../../redux/contacts/contactsOperations';\n\nimport { MdDelete } from 'react-icons/md';\nimport { IoIosContacts } from 'react-icons/io';\nimport { IconContext } from 'react-icons';\n\nimport {\n  List,\n  Item,\n  Container,\n  ContactData,\n  DeleteContactBtn,\n} from './ContactsList.styled';\n\nimport { HourglassLoader } from 'components/Loader/Loader';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilterValue);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContactsAction());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    if (filter.filter === '') return;\n    const normilezedFilter = filter.toLowerCase().trim();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilezedFilter)\n    );\n\n    return visibleContacts;\n  };\n\n  const visibleContacts = getFilteredContacts();\n\n  return (\n    <>\n      {error && <p>Something went wrong!. Try again later</p>}\n      {visibleContacts.length > 0 && (\n        <List>\n          {visibleContacts.map(({ id, name, number }) => (\n            <Item key={id}>\n              <IconContext.Provider value={{ color: '#283044', size: 40 }}>\n                <IoIosContacts />\n              </IconContext.Provider>\n              <Container>\n                <ContactData>{name}</ContactData>\n                <ContactData>{number}</ContactData>\n              </Container>\n              <DeleteContactBtn\n                type=\"button\"\n                onClick={() => {\n                  dispatch(deleteContactAction(id));\n                }}\n              >\n                <IconContext.Provider value={{ color: '#283044', size: 40 }}>\n                  <MdDelete />\n                </IconContext.Provider>\n              </DeleteContactBtn>\n            </Item>\n          ))}\n        </List>\n      )}\n      {isLoading && <HourglassLoader />}\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Container } from 'components/ContactsList/ContactsList.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { HourglassLoader } from 'components/Loader/Loader';\n\nimport { getAllContactsAction } from '../../redux/contacts/contactsOperations';\nimport { selectIsLoading } from '../../redux/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getAllContactsAction());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isLoading && <HourglassLoader />}\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","_templateObject3","_templateObject4","_templateObject5","Item","_templateObject6","ContactData","_templateObject7","DeleteContactBtn","_templateObject8","selectContacts","state","contacts","selectFilterValue","filter","selectError","error","selectIsLoading","isLoading","Form","Label","Input","SubmitButton","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","_e$target","target","value","_jsxs","onSubmit","preventDefault","some","contact","Notiflix","concat","addContactAction","children","_jsx","type","required","placeholder","onChange","FilterContainer","Filter","setSearchFilterAction","ContactsList","useEffect","getAllContactsAction","visibleContacts","normilezedFilter","toLowerCase","trim","includes","getFilteredContacts","_Fragment","length","map","_ref","id","IconContext","color","size","IoIosContacts","onClick","deleteContactAction","MdDelete","HourglassLoader"],"sourceRoot":""}